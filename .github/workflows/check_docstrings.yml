# Checks the docstring tests pass.
# Leverages cached dependencies and dependency analysis to speed this up.
#
# @copyright Galois, Inc
# @author John Christensen <jchristensen@galois.com>
#

name: Check docstrings

on:
  # Run on a PR to master
  pull_request:
    branches: [master]
  # Run on pushing to master
  push:
    branches: [master]
  # Run on master on Sundays
  schedule: [ cron: '0 17 * * 0' ]

jobs:
  check-docstrings:
    runs-on: ubuntu-latest
    # Permissions are required to delete the cache key.
    permissions:
      actions: write
      contents: read
    env:
      # This is the relative path to the Cryptol project directory.
      CRYPTOL_PROJECT: .
      # This is the relative path to the Cryptol cache.
      CRYPTOL_CACHE: ${{ github.workspace }}/.cryproject/loadcache.toml

      # There's one cache for the whole repo. It's associated with the `master` branch.
      CRYPTOL_CACHE_KEY: cryptol-specs-cache

      # In order to use Github CLI in a workflow, we need
      # the token that is generated for this workflow.
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    container:
      image: ghcr.io/galoisinc/cryptol:nightly
      options: --user root
    steps:
      # Install dependencies.
      # We require the github CLI tool to delete caches.
      # We require git to run the github CLI tool.
      - name: Installing dependencies..
        run: |
          apt-get update && apt-get install -y git wget
          wget https://github.com/cli/cli/releases/download/v2.69.0/gh_2.69.0_linux_amd64.tar.gz
          tar xzvf gh_2.69.0_linux_amd64.tar.gz
          mv gh_2.69.0_linux_amd64/bin/gh /usr/local/bin/

      # Check out the code.
      - id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Pull the default cache
      - id: load-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CRYPTOL_CACHE }}
          key: ${{ env.CRYPTOL_CACHE_KEY }}

      # Run the check-docstrings script, regardless of cache load.
      - name: "Run the check-docstrings script."
        run: |
          git config --global --add safe.directory '*'
          echo "Check which caches exist, for sanity."
          gh cache list

          bash scripts/check_docstrings.sh .

      # Caches can only be uploaded once. If we're on master and the cache already exists,
      # we need to delete it...
      - name: "If we're on master, delete the cache"
        if: github.ref == 'refs/heads/master' && steps.load-cache.outputs.cache-hit == 'true'
        run: gh cache delete ${{ env.CRYPTOL_CACHE_KEY }}

      # ...before we upload it. Do this regardless of whether it previously existed.
      - id: save-cache
        if: github.ref == 'refs/heads/master'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CRYPTOL_CACHE }}
          key: ${{ env.CRYPTOL_CACHE_KEY }}
